-----------------------------------------------------------------------------------
-- Initialising Variables
-----------------------------------------------------------------------------------
local utilities = game:GetService("ReplicatedStorage").ModuleScripts.Shared.Utilities
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
local geometry = {}

-- Finds the corner of 'part' in the direction of x,y,zSign (each are +/- 1). Part can't be rotated.
geometry.partCornerPosition = function(part,xSign,ySign,zSign)
	local xPos = part.Position.X + xSign*(part.Size.X)/2
	local zPos = part.Position.Z + zSign*(part.Size.Z)/2
	local yPos = part.Position.Y + ySign*(part.Size.Y)/2
	return Vector3.new(xPos,yPos,zPos)
end

-- Resizes 'part' with x,y,z values, unless they are nil 
geometry.resizePartAbsolute = function(part,x,y,z)
	part.Size = Vector3.new(utilities.nilBackup(x,part.Size.X),utilities.nilBackup(y,part.Size.Y),utilities.nilBackup(z,part.Size.Z))
end

-- Creates new Part, with Name, Anchored, Size, Position and Parent attributes
geometry.instanceNewPart = function(contents)
	local part = Instance.new("Part")
	part.Name = contents.Name or ""
	part.Anchored = contents.Anchored or true
	part.Size = contents.Size or Vector3.new(1,1,1)
	part.Position = contents.Position or Vector3.new(0, 0, 0)
	part.Parent = contents.Parent or game.Workspace
	return part
end

return geometry
